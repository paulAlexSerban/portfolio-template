version: "3.7"
services:
  proxy:
    image: traefik:latest
    container_name: traefik
    ports:
      - 80:80 # Exposes port 80 for incomming web requests
      - 443:443
      - 8080:8080  # The Web UI port http://0.0.0.0:8080 (enabled by --api.insecure=true)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # So that Traefik can listen to the Docker events
      - ./letsencrypt:/letsencrypt # Copies the Let's Encrypt certificate locally for ease of backing up
      - ../backend/proxy/traefik-entrypoints.yml:/etc/traefik/traefik.yml # Mounts the Traefik static configuration inside the Traefik container

  frontend-style-guide:
    build:
      context: ../frontend/frontend-style-guide
      dockerfile: frontend-style-guide.Dockerfile
    container_name: frontend-style-guide
    volumes: 
      - ../frontend/frontend-style-guide/dist:/usr/src/app/dist
      - ../frontend/frontend-style-guide/stories:/usr/src/app/stories
      - ../frontend/frontend-style-guide/wiki:/usr/src/frontend-style-guide/wiki
      - ../frontend/frontend-style-guide/.storybook:/usr/src/frontend-style-guide/.storybook
      - /usr/src/app/node_modules
    labels:
      - traefik.enable=true
    # Routers
      # - traefik.http.routers.storybook.rule=Host(`storybook.localhost`)
      - traefik.http.routers.frontend-style-guide.entrypoints=web
      - traefik.http.routers.frontend-style-guide.entrypoints=websecure
      - traefik.http.routers.frontend-style-guide.tls.certresolver=myresolver
    # Services
      - traefik.http.services.frontend-style-guide.loadbalancer.server.port=6006
    # Middlewares
      - traefik.http.routers.frontend-style-guide.middlewares=test-compress
    # Compress Middleware
      - traefik.http.middlewares.test-compress.compress=true
    # Error Pages Middleware
      - traefik.http.middlewares.test-errorpages.errors.status=400-599
      - traefik.http.middlewares.test-errorpages.errors.service=error
      - traefik.http.middlewares.test-errorpages.errors.query=/{status}.html
    # Redirect Scheme HTTP -> HTTPS
      - traefik.http.middlewares.test-redirectscheme.redirectscheme.scheme=https
      - traefik.http.middlewares.test-redirectscheme.redirectscheme.permanent=true
      - traefik.http.middlewares.test-redirectscheme.redirectscheme.port=443

  whoami:
    image: traefik/whoami
    labels:
      - traefik.enable=true
    # Routers
      # - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)
      - traefik.http.routers.whoami.entrypoints=web
      - traefik.http.routers.whoami.entrypoints=websecure
      - traefik.http.routers.whoami.tls.certresolver=myresolver
    # Services
      - traefik.http.services.whoami.loadbalancer.server.port=80
    # Middlewares
      - traefik.http.routers.whoami.middlewares=test-compress
    # Compress Middleware
      - traefik.http.middlewares.test-compress.compress=true
    # Error Pages Middleware
      - traefik.http.middlewares.test-errorpages.errors.status=400-599
      - traefik.http.middlewares.test-errorpages.errors.service=error
      - traefik.http.middlewares.test-errorpages.errors.query=/{status}.html
    # Redirect Scheme HTTP -> HTTPS
      - traefik.http.middlewares.test-redirectscheme.redirectscheme.scheme=https
      - traefik.http.middlewares.test-redirectscheme.redirectscheme.permanent=true
      - traefik.http.middlewares.test-redirectscheme.redirectscheme.port=443

  # Error Page service
  error:
    image: guillaumebriday/traefik-custom-error-pages
    labels:
      - traefik.enable=true
    # Routers
      # - traefik.http.routers.error.rule=Host(`error.localhost`)
      - traefik.http.routers.error.service=error
      - traefik.http.routers.error.entrypoints=web
    # Services
      - traefik.http.services.error.loadbalancer.server.port=80
      